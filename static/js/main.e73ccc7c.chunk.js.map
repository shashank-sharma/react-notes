{"version":3,"sources":["posts sync /^/.//.*$","posts/post-one.md","posts/post-two.md","posts/random.txt","posts sync //.md$","components/postlink.js","components/sidebar.js","components/content.js","components/notes.js","App.js","reportWebVitals.js","index.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","PostLink","state","className","onClick","props","pageHandler","filename","icon","faFile","size","style","color","this","title","Component","Sidebar","markdownList","name","a","markdownName","split","readmePath","require","default","fetch","then","response","text","fm","attributes","markdownKeys","posts","x","push","getFrontMatter","Promise","all","values","setState","data","Content","markdown","activePage","loading","console","log","nextProps","fetchMarkdown","fileName","markdownContent","marked","body","date","dangerouslySetInnerHTML","__html","Notes","pageName","Row","Col","xl","md","sm","lg","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e73ccc7c.chunk.js","sourcesContent":["var map = {\n\t\"./post-one.md\": 28,\n\t\"./post-two.md\": 29,\n\t\"./random.txt\": 75\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 27;","export default __webpack_public_path__ + \"static/media/post-one.bb33196a.md\";","export default __webpack_public_path__ + \"static/media/post-two.ce14b260.md\";","export default __webpack_public_path__ + \"static/media/random.71421d78.txt\";","var map = {\n\t\"./post-one.md\": 28,\n\t\"./post-two.md\": 29\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 76;","import React, {Component} from \"react\";\nimport { faFile } from \"@fortawesome/free-regular-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport './sidebar.css';\n\n\nclass PostLink extends Component {\n\n  state = {};\n\n  componentDidMount() {\n  }\n\n  componentWillMount() {\n  }\n\n  render() {\n    return (\n      <div className={\"post-sidebar-fcontainer\"} onClick={() => {this.props.pageHandler(this.props.filename)}}>\n        <div className={\"post-sidebar-filename\"}>\n      <span className={\"post-sidebar-icon\"}>\n        <FontAwesomeIcon icon={faFile} size=\"1x\" style={{color: 'white'}} />\n      </span>\n          {this.props.title}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default PostLink;","import React, {Component} from \"react\";\nimport fm from \"front-matter\";\nimport PostLink from \"./postlink\";\nimport './sidebar.css';\n\n\nclass Sidebar extends Component {\n\n  state = {\n    markdownList: []\n  };\n\n  async getFrontMatter(name) {\n    const markdownName = name.split(\"/\")[1]\n    const readmePath = require(\"../posts/\" + markdownName).default;\n    const response = await fetch(readmePath)\n      .then(response => {\n        return response.text();\n      })\n      .then(text => {\n        return fm(text).attributes\n      })\n    response['filename'] = markdownName\n    return response;\n  }\n\n  componentDidMount() {\n    const markdownContext = require.context('../posts', true, /\\.md$/);\n    const markdownKeys = markdownContext.keys()\n    const posts = []\n    for (let x in markdownKeys) {\n      posts.push(this.getFrontMatter(markdownKeys[x]))\n      // this.getFrontMatter(markdownKeys[x]).then(node => {\n      //   posts.push(node);\n      //   // this.setState(prevState => ({\n      //   //   markdownList: [...prevState.markdownList, node]\n      //   // }))\n      // })\n    }\n    Promise.all(posts).then((values) => {\n      this.setState({\n        markdownList: values\n      })\n    });\n    // const posts = markdownKeys\n    //   .map(name => this.getFrontMatter(name))\n    //   .filter(node => !!node.date)\n\n    // const readmePath = require(\"../posts/post-two.md\").default;\n    // fetch(readmePath)\n    //   .then(response => {\n    //     return response.text();\n    //   })\n    //   .then(text => {\n    //     const markdownContent = fm(text)\n    //     console.log(markdownContent);\n    //     this.setState({\n    //       markdown: marked(markdownContent.body)\n    //     })\n    //   })\n  }\n\n  componentWillMount() {\n  }\n\n  render() {\n    // const { markdown } = this.state;\n     // You can filter your posts based on some criteria\n      // .map(node => <PostLink title={node.title} />)\n    return (\n      <div className={\"post-sidebar\"}>\n        {this.state.markdownList.map((data) => {\n          return <PostLink title={data.title} filename={data.filename} pageHandler={this.props.pageHandler} />\n        })}\n        {/*<span dangerouslySetInnerHTML={{__html: markdown}}></span>*/}\n      </div>\n    );\n  }\n}\n\nexport default Sidebar;","import React, {Component} from \"react\";\nimport './content.css'\nimport fm from \"front-matter\";\nimport marked from \"marked\";\n\n\nclass Content extends Component {\n\n  state = {\n    markdown: \"\",\n    attributes: {},\n    activePage: \"\",\n    loading: false\n  };\n\n  componentDidMount() {\n    console.log(\"Component Did Mount\");\n  }\n\n  componentWillMount() {\n  }\n\n  componentWillReceiveProps(nextProps) {\n    // You don't have to do this check first, but it can help prevent an unneeded render\n    console.log(\"Component receive prop\", nextProps);\n    if (nextProps.activePage !== this.state.activePage) {\n      this.setState({\n        activePage: nextProps.activePage,\n        loading: true\n      });\n\n      this.fetchMarkdown(nextProps.activePage);\n    }\n  }\n\n  fetchMarkdown(fileName) {\n    const readmePath = require(\"../posts/\" + fileName).default;\n    fetch(readmePath)\n      .then(response => {\n        return response.text();\n      })\n      .then(text => {\n        const markdownContent = fm(text)\n        this.setState({\n          markdown: marked(markdownContent.body),\n          attributes: markdownContent.attributes,\n          loading: false\n        })\n      })\n  }\n\n  // componentDidUpdate(prevProp){\n  //   if (this.props.activePage) {\n  //     this.fetchMarkdown(this.props.activePage)\n  //   }\n  // }\n\n  // static getDerivedStateFromProps(props, current_state) {\n  //   console.log(\"Hey\");\n  //   console.log(props);\n  //   console.log(current_state);\n  //   // if (props.activePage) {\n  //   //   // this.fetchMarkdown(props.activePage)\n  //   //   const fileName = props.activePage\n  //   //   const readmePath = require(\"../posts/\" + fileName).default;\n  //   //   fetch(readmePath)\n  //   //     .then(response => {\n  //   //       return response.text();\n  //   //     })\n  //   //     .then(text => {\n  //   //       const markdownContent = fm(text)\n  //   //       current_state.setState({\n  //   //         markdown: marked(markdownContent.body),\n  //   //         attributes: markdownContent.attributes\n  //   //       })\n  //   //     })\n  //   // }\n  //   return null\n  // }\n\n  render() {\n    const { markdown } = this.state;\n    if (this.state.loading) {\n      return (\n        <div className={\"content-container\"}>\n          <h1 className={\"content-title\"}>Loading</h1>\n        </div>\n      )\n    } else{\n      return (\n        <div className={\"content-container\"}>\n          <h1 className={\"content-title\"}>{this.state.attributes.title}</h1>\n          <h7 className={\"content-date\"}>{this.state.attributes.date}</h7>\n          <hr/>\n          {/*<div dangerouslySetInnerHTML={{ __html: data.html }} />*/}\n          <span dangerouslySetInnerHTML={{__html: markdown}}></span>\n        </div>\n      )\n    }\n  }\n}\n\nexport default Content;","import React, {Component} from \"react\";\nimport {Col, Row} from \"react-bootstrap\";\nimport Sidebar from \"./sidebar\";\nimport Content from \"./content\";\nimport \"./notes.css\";\n\n\nclass Notes extends Component {\n\n  state = {\n    activePage: \"\"\n  };\n\n  componentDidMount() {\n  }\n\n  componentWillMount() {\n  }\n\n  pageHandler = (pageName) => {\n    console.log(\"PageHandler \" + pageName);\n    this.setState({\n      activePage: pageName\n    });\n  }\n\n  render() {\n    return (\n      <Row className={\"notes-container\"}>\n        <Col xl={\"2\"} md={\"3\"} sm={\"12\"} className={\"sticky-sidebar\"}><Sidebar pageHandler={this.pageHandler}/></Col>\n        <Col lg={\"10\"} md={\"9\"} sm={\"12\"}><Content activePage={this.state.activePage}/></Col>\n      </Row>\n    );\n  }\n}\n\nexport default Notes;","import 'bootstrap/dist/css/bootstrap.min.css';\nimport Notes from \"./components/notes\";\nimport './App.css';\n\nfunction App() {\n  return (\n    <Notes/>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}